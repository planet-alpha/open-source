# Grafana 客户回执下降率告警配置 (Prometheus 数据源)
# 使用说明：
# 1) 将 P1809F7CD0C75ACF3 替换为你的 Prometheus 数据源 UID（Grafana -> 数据源 -> Prometheus -> UID）
# 2) 将本文件放到 Grafana provisioning 目录（如 /etc/grafana/provisioning/alerting/），并重启/重新加载 Grafana
# 3) 告警会出现在 "Business-Customer-Receipt" 文件夹下
# 4) 环境变量（可在 Grafana 中设置或直接替换本文内变量）：
#    - EVAL_FROM_SECONDS：评估回看秒数（默认：1800，即30分钟）
#    - FOR_DURATION：告警持续判定时长（默认：3m）
#    - MIN_BASELINE_TOTAL：基线总量阈值（过去30m内1m非超时总量的均值），低于该值不触发（默认：100）
#    - MIN_ABS_DROP：绝对下降阈值（基于回执的1m均值与当前1m的差值），默认：10
#    - RECEIPT_DROP_PCT_THRESHOLD：回执下降比例阈值(%)，默认：5（表示相对30m基线下降≥5%触发）
# 说明：
# - 采用过去30分钟的平均回执比例作为动态基线，避免短时偶发波动造成频繁误报
# - 同时设置"绝对下降基线"和"总量基线"作为门槛：
#   1) 绝对下降基线：过去30m的1m回执数均值 - 当前1m回执数 ≥ MIN_ABS_DROP
#   2) 总量基线：过去30m的1m非超时总量均值 ≥ MIN_BASELINE_TOTAL

apiVersion: 1

groups:
  - orgId: 1
    name: Customer Receipt Drop Alerts
    folder: Business-Customer-Receipt
    interval: 1m
    rules:
      - uid: customer_receipt_drop_rate
        title: CustomerReceiptDropRate
        condition: C
        data:
          # A: 回执下降比例(%)，相对30m动态基线，且满足绝对下降与总量基线门槛
          - refId: A
            relativeTimeRange:
              from: 1800
              to: 0
            datasourceUid: P1809F7CD0C75ACF3
            model:
              datasource:
                type: prometheus
                uid: P1809F7CD0C75ACF3
              editorMode: code
              expr: |
                # 计算回执下降比例(%)，相对30m动态基线，并应用双门槛过滤
                clamp_min(
                  (
                    # R_base: 30m基线回执比例(%)
                    100 * avg_over_time((
                      sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                      /
                      clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                    )[30m:1m])
                    
                    -
                    
                    # R_cur: 当前1m回执比例(%)
                    100 * (
                      sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                      /
                      clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                    )
                  )
                  /
                  # 除以基线比例，得到相对下降比例
                  100 * avg_over_time((
                    sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                    /
                    clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                  )[30m:1m])
                  * 100, 0
                )
                and (
                  # 绝对下降门槛：30m内1m回执数均值 - 当前1m回执数 >= MIN_ABS_DROP
                  avg_over_time(sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))[30m:1m])
                  -
                  sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                  >= 10
                )
                and (
                  # 总量基线门槛：30m内1m非超时总量的均值 >= MIN_BASELINE_TOTAL
                  avg_over_time(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m]))[30m:1m]) >= 100
                )
                and (
                  # 基线回执比例必须大于0，避免除零错误
                  100 * avg_over_time((
                    sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                    /
                    clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                  )[30m:1m]) > 0
                )
              interval: ""
              intervalMs: 1000
              instant: true
              legendFormat: "name={{name}}, appName={{appName}}, cId={{cId}}, appId={{appId}} | 下降比例(%)"
              maxDataPoints: 43200
              range: false
              refId: A
          
          # B: 当前1m回执比例(%)，相对30m动态基线，且满足绝对下降与总量基线门槛
          - refId: B
            relativeTimeRange:
              from: 1800
              to: 0
            datasourceUid: P1809F7CD0C75ACF3
            model:
              datasource:
                type: prometheus
                uid: P1809F7CD0C75ACF3
              editorMode: code
              expr: |
                100 * (
                  sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                  /
                  clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                )
              interval: ""
              intervalMs: 1000
              instant: true
              legendFormat: "name={{name}}, appName={{appName}}, cId={{cId}}, appId={{appId}} | 当前1m回执比例(%)"
              maxDataPoints: 43200
              range: false
              refId: B
          
          # D: 30m基线回执比例(%)，相对30m动态基线，且满足绝对下降与总量基线门槛
          - refId: D
            relativeTimeRange:
              from: 1800
              to: 0
            datasourceUid: P1809F7CD0C75ACF3
            model:
              datasource:
                type: prometheus
                uid: P1809F7CD0C75ACF3
              editorMode: code
              expr: |
                100 * avg_over_time((
                  sum by(name, appName,cId,appId)(increase(customer_deliver_resp_total{cId=~".*", name=~".*", appId=~".*", appName=~".*"}[1m]))
                  /
                  clamp_min(sum by(name, appName,cId,appId)(increase(customer_deliver_total{cId=~".*", name=~".*", appId=~".*", appName=~".*", stat!~"^timeout$"}[1m])), 1)
                )[30m:1m])
              interval: ""
              intervalMs: 1000
              instant: true
              legendFormat: "name={{name}}, appName={{appName}}, cId={{cId}}, appId={{appId}} | 30m基线回执比例(%)"
              maxDataPoints: 43200
              range: false
              refId: D
          
          # C: 阈值判断——当下降比例 ≥ RECEIPT_DROP_PCT_THRESHOLD 触发
          - refId: C
            relativeTimeRange:
              from: 1800
              to: 0
            datasourceUid: __expr__
            model:
              conditions:
                - evaluator:
                    params: [5]
                    type: gt
                  operator:
                    type: and
                  query:
                    params: [A]
                  reducer:
                    type: last
                  type: query
              datasource:
                type: __expr__
                uid: __expr__
              expression: A
              intervalMs: 1000
              maxDataPoints: 43200
              refId: C
              type: threshold
        noDataState: OK
        execErrState: Error
        for: 3m
        annotations:
          summary: "客户回执下降率异常: name={{ $labels.name }}, appName={{ $labels.appName }}, cId={{ $labels.cId }}, appId={{ $labels.appId }}"
          description: |
            监控数据详情（含实时数值）：
            - 标识信息：name={{ $labels.name }}, appName={{ $labels.appName }}, cId={{ $labels.cId }}, appId={{ $labels.appId }}
            - 当前1m回执比例 R_cur(%)：{{ printf "%.2f" (index $values "B") }} （查询B：最近1分钟 resp_1m / non_timeout_1m）
            - 30m基线回执比例 R_base(%)：{{ printf "%.2f" (index $values "D") }} （查询D：${BASELINE_WINDOW:-30m}区间内 R_cur 的1m均值）
            - 相对下降比例 DROP_PCT(%)：{{ printf "%.2f" (index $values "A") }} （查询A：clamp_min((R_base - R_cur)/R_base*100, 0)）
 
        labels:
          severity: warning
          category: business-customer-receipt
          alert_type: receipt_drop_rate
